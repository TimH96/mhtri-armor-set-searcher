{"version":3,"sources":["../../data-provider/models/equipment/EquipmentSkills.ts","../../data-provider/data-provider.module.ts","../../helper/range.helper.ts","../../data-provider/models/equipment/EquipmentCategory.ts","../../data-provider/models/user/UserCharmList.ts","../../helper/html.helper.ts","../ui/charms.component.ts","../../data-provider/models/user/UserEquipmentSettings.ts","../ui/eq-settings.component.ts","../ui/navbar.component.ts","../ui/picker.component.ts","../../scorer/models/ArmorEvaluation.ts","../../searcher/models/ArmorSet.ts","../../data-provider/models/equipment/ArmorType.ts","../../data-filter/data-filter.module.ts","../../scorer/scorer.module.ts","../../scorer/models/DecoEvaluation.ts","../../scorer/models/DecoMinSlotMap.ts","../../searcher/searcher.module.ts","../ui/global-settings.component.ts","../ui/search-results.component.ts","../ui/search-controls.component.ts","index.ts","../../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"pages.77de5100.js","sourceRoot":"..\\src\\app\\pages","sourcesContent":["import GameID from '../GameId'\r\nimport Skill from '../skills/Skill'\r\n\r\nexport default class EquipmentSkills extends Map<GameID, Skill> {\r\n  get (key: GameID): Skill {\r\n    return super.get(key) || 0\r\n  }\r\n\r\n  add (key: GameID, val: Skill) {\r\n    this.set(key, val + this.get(key))\r\n  }\r\n\r\n  addSkills (m: EquipmentSkills) {\r\n    for (const [k, v] of m) {\r\n      this.add(k, v)\r\n    }\r\n  }\r\n\r\n  substract (key: GameID, val: Skill) {\r\n    this.set(key, val + this.get(key))\r\n  }\r\n\r\n  substractSkills (m: EquipmentSkills) {\r\n    for (const [k, v] of m) {\r\n      this.substract(k, v)\r\n    }\r\n  }\r\n\r\n  multiply (factor: number) {\r\n    for (const [k, v] of this) {\r\n      this.set(k, v * factor)\r\n    }\r\n  }\r\n}\r\n","import ArmorPiece from './models/equipment/ArmorPiece'\r\nimport Decoration from './models/equipment/Decoration'\r\nimport EquipmentSkills from './models/equipment/EquipmentSkills'\r\nimport GameID from './models/GameId'\r\nimport SkillActivation from './models/skills/SkillActivation'\r\nimport SkillActivationMap from './models/skills/SkillActivationMap'\r\nimport Skill from './models/skills/Skill'\r\nimport SkillNameMap from './models/skills/SkillNameMap'\r\n\r\nconst MAX_RARITY = 7\r\n\r\nconst TORSO_UP_ID = 83\r\n\r\nconst DUMMY_PIECE: ArmorPiece = {\r\n  name: 'None',\r\n  type: -1,\r\n  defense: { base: 0, max: 0, maxLr: 0 },\r\n  resistance: [0, 0, 0, 0, 0],\r\n  category: -1,\r\n  slots: 0,\r\n  rarity: 0,\r\n  skills: new EquipmentSkills(),\r\n  isGeneric: true,\r\n}\r\n\r\n/** fetch from data directory */\r\nconst getRawData = async (url: string) => {\r\n  return (await fetch(url)).json()\r\n}\r\n\r\n/** fetch and parse generic equipment data */\r\nconst getDataWithTransformedSkillMap = async (url: string): Promise<{skills: EquipmentSkills}[]> => {\r\n  const raw = await getRawData(url)\r\n  return raw.map((rawX: any) => {\r\n    const skillMap: EquipmentSkills = new EquipmentSkills()\r\n    for (const x in rawX.skills) {\r\n      const skill: Skill = rawX.skills[x]\r\n      skillMap.set(parseInt(x), skill)\r\n    }\r\n    return {\r\n      ...rawX,\r\n      skills: skillMap,\r\n    }\r\n  })\r\n}\r\n\r\n/** get a list of all head armor pieces */\r\nconst getHead = async (): Promise<ArmorPiece[]> => {\r\n  return getDataWithTransformedSkillMap('./head.json') as unknown as ArmorPiece[]\r\n}\r\n\r\n/** get a list of all chest armor pieces */\r\nconst getChest = async (): Promise<ArmorPiece[]> => {\r\n  return getDataWithTransformedSkillMap('./chest.json') as unknown as ArmorPiece[]\r\n}\r\n\r\n/** get a list of all arms armor pieces */\r\nconst getArms = async (): Promise<ArmorPiece[]> => {\r\n  return getDataWithTransformedSkillMap('./arms.json') as unknown as ArmorPiece[]\r\n}\r\n\r\n/** get a list of all waist armor pieces */\r\nconst getWaist = async (): Promise<ArmorPiece[]> => {\r\n  return getDataWithTransformedSkillMap('./waist.json') as unknown as ArmorPiece[]\r\n}\r\n\r\n/** get a list of all legs armor pieces */\r\nconst getLegs = async (): Promise<ArmorPiece[]> => {\r\n  return getDataWithTransformedSkillMap('./legs.json') as unknown as ArmorPiece[]\r\n}\r\n\r\n/** get a list of all decorations */\r\nconst getDecorations = async (): Promise<Decoration[]> => {\r\n  return getDataWithTransformedSkillMap('./decorations.json') as unknown as Decoration[]\r\n}\r\n\r\n/** get a mapping of internal id to name for all skills */\r\nconst getSkillNameMap = async (): Promise<SkillNameMap> => {\r\n  const raw = await getRawData('./skill-names.json')\r\n  const map: Map<GameID, string> = new Map()\r\n  for (const id in raw) {\r\n    map.set(parseInt(id), raw[id])\r\n  }\r\n  return map\r\n}\r\n\r\n/** get a list of skill category names, as used in the UI */\r\nconst getSkillCategories = async (): Promise<string[]> => {\r\n  return getRawData('./skill-categories.json')\r\n}\r\n\r\n/** get a mapping of internal id of skill to all activations (positive and negative) of that skill */\r\nconst getSkillActivationMap = async (): Promise<SkillActivationMap> => {\r\n  const raw = await getRawData('./skills.json')\r\n  const map: Map<GameID, SkillActivation[]> = new Map()\r\n  for (const id in raw) {\r\n    const parsedId = parseInt(id)\r\n    map.set(\r\n      parsedId,\r\n      raw[id].map((activation: any) => {\r\n        return {\r\n          ...activation,\r\n          requiredSkill: parsedId,\r\n        }\r\n      }),\r\n    )\r\n  }\r\n  return map\r\n}\r\n\r\nexport {\r\n  MAX_RARITY,\r\n  TORSO_UP_ID,\r\n  DUMMY_PIECE,\r\n  getHead,\r\n  getChest,\r\n  getArms,\r\n  getWaist,\r\n  getLegs,\r\n  getDecorations,\r\n  getSkillNameMap,\r\n  getSkillCategories,\r\n  getSkillActivationMap,\r\n}\r\n","export const range = (start: number, end: number) => Array.from({ length: (end - start) }, (_, k) => k + start)\r\n","/* eslint-disable no-unused-vars */\r\nenum EquipmentCategory {\r\n  HEAD = 0,\r\n  CHEST = 1,\r\n  ARMS = 2,\r\n  WAIST = 3,\r\n  LEGS = 4,\r\n  CHARM = 5,\r\n  WEAPON = 6,\r\n}\r\n\r\nexport default EquipmentCategory\r\n","import { range } from '../../../helper/range.helper'\r\nimport SkillNameMap from '../skills/SkillNameMap'\r\nimport Charm from '../equipment/Charm'\r\nimport EquipmentCategory from '../equipment/EquipmentCategory'\r\nimport EquipmentSkills from '../equipment/EquipmentSkills'\r\nimport Slots from '../equipment/Slots'\r\n\r\nexport default class UserCharmList {\r\n  // eslint-disable-next-line no-use-before-define\r\n  private static _instance: UserCharmList\r\n\r\n  private list: Charm[]\r\n\r\n  private constructor () {\r\n    this.list = []\r\n  }\r\n\r\n  public static get Instance () {\r\n    return this._instance || (this._instance = new this())\r\n  }\r\n\r\n  public static getCharmName (\r\n    skills: EquipmentSkills,\r\n    slots: Slots,\r\n    skillNames: SkillNameMap,\r\n  ): string {\r\n    const skillStrings = Array.from(skills.entries()).map(\r\n      (s) => `${skillNames.get(s[0])}:${s[1]}`,\r\n    )\r\n    const slotString = slots !== 0 ? `${slots} Slots` : ''\r\n\r\n    return [...skillStrings, slotString].join(' ').trim()\r\n  }\r\n\r\n  /** get the list of charms */\r\n  get () {\r\n    return this.list\r\n  }\r\n\r\n  /** adds a given charm to list */\r\n  add (charm: Charm): number {\r\n    return this.list.push(charm)\r\n  }\r\n\r\n  /** removes charm at specified index from list */\r\n  remove (index: number) {\r\n    this.list = this.list.filter((_, i) => i !== index)\r\n  }\r\n\r\n  /** serializes charm list as csv */\r\n  serialize (skillNames: SkillNameMap): string {\r\n    return this.list\r\n      .map((charm) => {\r\n        const s = []\r\n\r\n        const skillArray = Array.from(charm.skills.entries())\r\n        skillArray.forEach(([sId, sVal]) => {\r\n          s.push(`${skillNames.get(sId)},${sVal},`)\r\n        })\r\n\r\n        const amountOfSkills = skillArray.length\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (const _ in range(amountOfSkills, 2)) {\r\n          s.push(',,')\r\n        }\r\n\r\n        s.push(`${charm.slots}`)\r\n\r\n        return s.join('')\r\n      })\r\n      .join('\\n')\r\n  }\r\n\r\n  /** populate charm list from csv */\r\n  deserialize (csv: string, skillNames: SkillNameMap): Charm[] {\r\n    const newList = []\r\n\r\n    for (const charm of csv.split('\\n')) {\r\n      const spl = charm.split(',')\r\n\r\n      const slots = parseInt(spl[4])\r\n      const skills = [\r\n        [0, 1],\r\n        [2, 3],\r\n      ]\r\n        .filter(([_, j]) => !isNaN(parseInt(spl[j])))\r\n        .map(([i, j]) => {\r\n          const name = spl[i]\r\n\r\n          const id = Array.from(skillNames.entries()).find(([_, n]) => {\r\n            return n === name\r\n          })![0]\r\n\r\n          // build skill model\r\n          const skill = {\r\n            name,\r\n            points: parseInt(spl[j]),\r\n            id,\r\n          }\r\n          return skill\r\n        })\r\n\r\n      const skillMap: EquipmentSkills = new EquipmentSkills(\r\n        skills.map((skill) => {\r\n          return [skill.id, skill.points]\r\n        }),\r\n      )\r\n      const newCharm: Charm = {\r\n        name: UserCharmList.getCharmName(skillMap, slots as Slots, skillNames),\r\n        category: EquipmentCategory.CHARM,\r\n        slots: slots as Slots,\r\n        rarity: 0,\r\n        skills: skillMap,\r\n      }\r\n\r\n      newList.push(newCharm)\r\n    }\r\n\r\n    this.list = newList\r\n    return newList\r\n  }\r\n}\r\n","export const htmlToElement = (html: string): Node => {\r\n  const template = document.createElement('template')\r\n  html = html.trim()\r\n  template.innerHTML = html\r\n  return template.content.firstChild as Node\r\n}\r\n","import SkillActivationMap from '../../data-provider/models/skills/SkillActivationMap'\r\nimport SkillNameMap from '../../data-provider/models/skills/SkillNameMap'\r\nimport Charm from '../../data-provider/models/equipment/Charm'\r\nimport Skill from '../../data-provider/models/skills/Skill'\r\nimport UserCharmList from '../../data-provider/models/user/UserCharmList'\r\nimport { htmlToElement } from '../../helper/html.helper'\r\nimport Slots from '../../data-provider/models/equipment/Slots'\r\nimport EquipmentCategory from '../../data-provider/models/equipment/EquipmentCategory'\r\nimport GameID from '../../data-provider/models/GameId'\r\nimport { range } from '../../helper/range.helper'\r\nimport EquipmentSkills from '../../data-provider/models/equipment/EquipmentSkills'\r\n\r\nconst saveToStorage = (skillNames: SkillNameMap) => {\r\n  window.localStorage.setItem('charms', UserCharmList.Instance.serialize(skillNames))\r\n}\r\n\r\nconst getFromStorage = () => {\r\n  return window.localStorage.getItem('charms')\r\n}\r\n\r\nconst validSkill = (id: GameID, points: Skill) => {\r\n  return points !== 0 && id !== -1\r\n}\r\n\r\nconst removeTableElement = (index: number) => {\r\n  const ele = document.getElementsByClassName(`charm-${index}`)[0]\r\n  ele.remove()\r\n}\r\n\r\nconst populateCharmsFromCSV = (csv: string, skillNames: SkillNameMap) => {\r\n  UserCharmList.Instance.deserialize(csv, skillNames)\r\n  UserCharmList.Instance.get().forEach((charm, i) => {\r\n    addTableElement(charm, i, skillNames)\r\n  })\r\n}\r\n\r\nconst purgeTable = () => {\r\n  const entries = document.getElementsByClassName('charm-table-ele')\r\n  for (const entry of Array.from(entries)) {\r\n    entry.remove()\r\n  }\r\n}\r\n\r\nconst addTableElement = (charm: Charm, index: number, skillNames: SkillNameMap) => {\r\n  const ele = htmlToElement(`<tr class=\"charm-table-ele charm-${index}\" data-index=\"${index}\"></tr>`)\r\n\r\n  // get real table elements\r\n  for (const skill of Array.from(charm.skills.keys())) {\r\n    ele.appendChild(htmlToElement(`<td>${skillNames.get(skill)}</td>`))\r\n    ele.appendChild(htmlToElement(`<td>${charm.skills.get(skill)}</td>`))\r\n  }\r\n\r\n  // get placeholder table elements\r\n  const amountOfSkills = Array.from(charm.skills.keys()).length\r\n  // eslint-disable-next-line no-unused-vars\r\n  for (const _ in range(amountOfSkills, 2)) {\r\n    ele.appendChild(htmlToElement('<td></td>'))\r\n    ele.appendChild(htmlToElement('<td></td>'))\r\n  }\r\n\r\n  // get slots and delete\r\n  ele.appendChild(htmlToElement(`<td>${charm.slots}</td>`))\r\n  const d = htmlToElement('<td class=\"charm-delete\">X</td>')\r\n  d.addEventListener('click', () => removeCharm(index, skillNames))\r\n  ele.appendChild(d)\r\n\r\n  // add final element\r\n  const tbody = document.getElementById('charm-table')!.children[0]\r\n  tbody.appendChild(ele)\r\n}\r\n\r\nconst addCharm = (charm: Charm, skillNames: SkillNameMap) => {\r\n  const i = UserCharmList.Instance.add(charm)\r\n  addTableElement(charm, i - 1, skillNames)\r\n  saveToStorage(skillNames)\r\n}\r\n\r\nconst removeCharm = (index: number, skillNames: SkillNameMap) => {\r\n  UserCharmList.Instance.remove(index)\r\n  removeTableElement(index)\r\n  saveToStorage(skillNames)\r\n}\r\n\r\nconst onExportClick = (skillNames: SkillNameMap) => {\r\n  const str = UserCharmList.Instance.serialize(skillNames)\r\n  const blob = new Blob([str], { type: 'text/plain' })\r\n  const a = document.getElementById('charm-download') as HTMLAnchorElement\r\n  const url = window.URL.createObjectURL(blob)\r\n\r\n  a.href = url\r\n  a.download = 'charms.csv'\r\n  a.click()\r\n}\r\n\r\nconst onImportClick = (e: MouseEvent) => {\r\n  e.preventDefault()\r\n\r\n  const inp = document.getElementById('charm-upload') as HTMLInputElement\r\n  inp.click()\r\n}\r\n\r\nconst onFileUploaded = (skillNames: SkillNameMap) => {\r\n  const inp = document.getElementById('charm-upload') as HTMLInputElement\r\n\r\n  if (!inp.files) {\r\n    return\r\n  }\r\n\r\n  const file = inp.files[0]\r\n  file.text().then((text) => {\r\n    try {\r\n      UserCharmList.Instance.deserialize(text, skillNames)\r\n      saveToStorage(skillNames)\r\n      purgeTable()\r\n      UserCharmList.Instance.get().forEach((charm, i) => {\r\n        addTableElement(charm, i, skillNames)\r\n      })\r\n    } catch {\r\n      alert('Could not process file')\r\n    }\r\n  })\r\n}\r\n\r\nconst onAddClick = (skillNames: SkillNameMap) => {\r\n  // parse data\r\n  const slots = parseInt((document.getElementById('charm-slots') as HTMLSelectElement).value)\r\n  const skills = [1, 2].map((x) => {\r\n    return {\r\n      id: parseInt((document.getElementById(`charm-skill-${x}-name`) as HTMLSelectElement).value),\r\n      points: parseInt((document.getElementById(`charm-skill-${x}-points`) as HTMLSelectElement).value),\r\n    }\r\n  })\r\n\r\n  // return if charm invalid\r\n  if (slots === 0 && !skills.some(s => validSkill(s.id, s.points))) {\r\n    return\r\n  }\r\n\r\n  // map to model\r\n  const skillsMap = new EquipmentSkills(skills\r\n    .filter(s => validSkill(s.id, s.points))\r\n    .map(s => [s.id, s.points]))\r\n  const charm: Charm = {\r\n    name: UserCharmList.getCharmName(skillsMap, slots as Slots, skillNames),\r\n    slots: slots as Slots,\r\n    category: EquipmentCategory.CHARM,\r\n    rarity: 0,\r\n    skills: skillsMap,\r\n  }\r\n\r\n  // add\r\n  addCharm(charm, skillNames)\r\n}\r\n\r\nconst attachControlListeners = (skillNames: SkillNameMap) => {\r\n  document.getElementById('charm-add')!.addEventListener('click', () => onAddClick(skillNames))\r\n  document.getElementById('charm-export')!.addEventListener('click', () => onExportClick(skillNames))\r\n  document.getElementById('charm-import')!.addEventListener('click', (e) => onImportClick(e))\r\n  document.getElementById('charm-upload')!.addEventListener('change', () => onFileUploaded(skillNames))\r\n}\r\n\r\nconst populatePointsPickers = () => {\r\n  const pickers = document.getElementsByClassName('charm-points-pick')\r\n  for (const picker of Array.from(pickers)) {\r\n    for (const amount of range(-10, 11).reverse()) {\r\n      picker.appendChild(htmlToElement(`\r\n        <option ${amount === 0 ? 'selected=\"selected\"' : ''} value=\"${amount}\">${amount}</option>\r\n      `))\r\n    }\r\n  }\r\n}\r\n\r\nconst populateSkillsPickers = (\r\n  skillNames: SkillNameMap,\r\n  skillActivation: SkillActivationMap,\r\n  skillCategories: string[],\r\n) => {\r\n  const pickers = document.getElementsByClassName('charm-skill-pick')\r\n  for (const picker of Array.from(pickers)) {\r\n    // make optgroup for each category\r\n    const optGroups = skillCategories.map((category, i) => {\r\n      return htmlToElement(`\r\n        <optgroup label=\"${category}\" data-category=\"${i}\"></optgroup>\r\n      `)\r\n    })\r\n\r\n    // append skill options to optgroup\r\n    skillActivation.forEach((activationList) => {\r\n      // continue if skill cant be activated -- Torso Up\r\n      if (activationList.length === 0) {\r\n        return\r\n      }\r\n\r\n      const dummyActivation = activationList[0]\r\n      const category = dummyActivation.category\r\n      const skill = dummyActivation.requiredSkill\r\n      const name = skillNames.get(skill)\r\n\r\n      const ele = htmlToElement(`\r\n        <option value=\"${skill}\" data-skill=\"${skill}\">${name}</option>\r\n      `)\r\n      optGroups[category].appendChild(ele)\r\n    })\r\n\r\n    // add default\r\n    optGroups.unshift(htmlToElement(`\r\n      <option value=\"-1\" data-skill=\"-1\">None</option>\r\n    `))\r\n\r\n    // add elements and select default\r\n    picker.append(...optGroups)\r\n    picker.getElementsByTagName('option')[0].selected = true\r\n  }\r\n}\r\n\r\nconst populateCharmPicker = (\r\n  skillNames: SkillNameMap,\r\n  skillActivation: SkillActivationMap,\r\n  skillCategories: string[],\r\n) => {\r\n  populatePointsPickers()\r\n  populateSkillsPickers(skillNames, skillActivation, skillCategories)\r\n}\r\n\r\nexport const renderCharmPicker = (\r\n  skillNames: SkillNameMap,\r\n  skillActivation: SkillActivationMap,\r\n  skillCategories: string[],\r\n) => {\r\n  populateCharmPicker(skillNames, skillActivation, skillCategories)\r\n  attachControlListeners(skillNames)\r\n\r\n  const savedCharms = getFromStorage()\r\n  if (savedCharms) {\r\n    populateCharmsFromCSV(savedCharms, skillNames)\r\n  }\r\n}\r\n","import EquipmentCategory from '../equipment/EquipmentCategory'\r\nimport EquipmentMin from '../equipment/EquipmentMin'\r\n\r\nexport default class UserEquipmentSettings {\r\n  // eslint-disable-next-line no-use-before-define\r\n  private static _instance: UserEquipmentSettings\r\n\r\n  pins: (EquipmentMin | undefined)[]\r\n\r\n  exclusions: EquipmentMin[][]\r\n\r\n  isActive: boolean\r\n\r\n  private constructor () {\r\n    this.pins = []\r\n    this.exclusions = []\r\n\r\n    const supportedCategoires = [\r\n      EquipmentCategory.HEAD,\r\n      EquipmentCategory.CHEST,\r\n      EquipmentCategory.ARMS,\r\n      EquipmentCategory.WAIST,\r\n      EquipmentCategory.LEGS,\r\n    ]\r\n\r\n    supportedCategoires.forEach((_) => {\r\n      this.pins.push(undefined)\r\n      this.exclusions.push([])\r\n    })\r\n\r\n    this.isActive = false\r\n  }\r\n\r\n  public static get Instance () {\r\n    return this._instance || (this._instance = new this())\r\n  }\r\n\r\n  /** pins given equipment to corresponding category */\r\n  addPin (x: EquipmentMin): void {\r\n    this.pins[x.category] = x\r\n  }\r\n\r\n  /** removes pin of category */\r\n  removePin (cat: EquipmentCategory): void {\r\n    this.pins[cat] = undefined\r\n  }\r\n\r\n  /** adds given equipment to exclusion list of corresponding category */\r\n  addExclusion (x: EquipmentMin): void {\r\n    this.exclusions[x.category].push(x)\r\n  }\r\n\r\n  /** removes equipment from exclusion list */\r\n  removeExclusion (x: EquipmentMin): void {\r\n    const arr = this.exclusions[x.category]\r\n    const index = arr.findIndex((y) => y.name === x.name)\r\n    this.exclusions[x.category].splice(index, 1)\r\n  }\r\n\r\n  /** returns true if pin is same as given element */\r\n  hasPin (x: EquipmentMin | undefined): boolean {\r\n    if (!x) return false\r\n    if (x.isGeneric) return false\r\n\r\n    const pin = this.pins[x.category]\r\n    if (!pin) return false\r\n    return pin.name === x.name\r\n  }\r\n\r\n  /** returns true if piece is already excluded */\r\n  hasExclusion (x: EquipmentMin): boolean {\r\n    return !!this.exclusions[x.category].find(y => y.name === x.name)\r\n  }\r\n\r\n  /** serializes settings as json */\r\n  serialize (): string {\r\n    return JSON.stringify({ pins: this.pins, exclusions: this.exclusions })\r\n  }\r\n\r\n  /** populate settings from json */\r\n  deserialize (raw: string): void {\r\n    const parsed = JSON.parse(raw) as {\r\n      pins: (EquipmentMin | undefined)[];\r\n      exclusions: EquipmentMin[][];\r\n\r\n    }\r\n    this.pins = parsed.pins\r\n    this.exclusions = parsed.exclusions\r\n  }\r\n}\r\n","import EquipmentCategory from '../../data-provider/models/equipment/EquipmentCategory'\r\nimport UserEquipmentSettings from '../../data-provider/models/user/UserEquipmentSettings'\r\nimport { htmlToElement } from '../../helper/html.helper'\r\nimport EquipmentMin from '../../data-provider/models/equipment/EquipmentMin'\r\n\r\nconst saveToStorage = () => {\r\n  window.localStorage.setItem(\r\n    'eq-settings',\r\n    UserEquipmentSettings.Instance.serialize(),\r\n  )\r\n}\r\n\r\nconst getFromStorage = () => {\r\n  return window.localStorage.getItem('eq-settings')\r\n}\r\n\r\nconst getExclusionElement = (x: EquipmentMin) => {\r\n  const root = document.createElement('div')\r\n  root.style.textAlign = 'left'\r\n  root.setAttribute(\"data-name\", x.name)\r\n  root.classList.add(\"eq-exclusion-ele\")\r\n\r\n  const content = htmlToElement(`<span>${x.name}</span>`)\r\n  const remove = htmlToElement('<span>X</span>') as HTMLSpanElement\r\n  remove.addEventListener('click', () => removeExlusion(x))\r\n  remove.style.marginRight = '1em'\r\n  remove.style.marginLeft = '1em'\r\n  remove.style.cursor = \"pointer\"\r\n\r\n  root.appendChild(remove)\r\n  root.appendChild(content)\r\n  return root\r\n}\r\n\r\nconst getPinPicker = (cat: EquipmentCategory, eq: EquipmentMin[]) => {\r\n  const root = document.createElement('div')\r\n  root.style.textAlign = 'left'\r\n\r\n  const content = document.createElement('select')\r\n  content.setAttribute('id', `eq-${cat}-pin-picker`)\r\n  content.style.width = '72%'\r\n  for (const x of [{ name: 'None', category: cat }].concat(...eq)) {\r\n    content.appendChild(\r\n      htmlToElement(`<option value=\"${x.name}\">${x.name}</option>`),\r\n    )\r\n  }\r\n  content.addEventListener('change', () => {\r\n    addPin({ name: content.value, category: cat })\r\n  })\r\n  const remove = htmlToElement('<span>X</span>') as HTMLSpanElement\r\n  remove.addEventListener('click', () => removePin(eq[0].category))\r\n  remove.style.marginRight = '1em'\r\n  remove.style.marginLeft = '1em'\r\n  remove.style.cursor = \"pointer\"\r\n\r\n  root.appendChild(remove)\r\n  root.appendChild(content)\r\n  return root\r\n}\r\n\r\nconst renderColumns = (armor: EquipmentMin[][]) => {\r\n  const parent = document.getElementById('eq-container')\r\n  for (const item of [\r\n    [EquipmentCategory.HEAD, 'Head', armor[0]],\r\n    [EquipmentCategory.CHEST, 'Chest', armor[1]],\r\n    [EquipmentCategory.ARMS, 'Arms', armor[2]],\r\n    [EquipmentCategory.WAIST, 'Waist', armor[3]],\r\n    [EquipmentCategory.LEGS, 'Legs', armor[4]],\r\n  ]) {\r\n    const cat = item[0] as EquipmentCategory\r\n    const name = item[1] as string\r\n    const eq = item[2] as EquipmentMin[]\r\n\r\n    const root = htmlToElement(`<div class=\"eq-column\" data-eq-column-type=\"${cat}\"></div>`,)\r\n\r\n    // pins\r\n    const pinHeader = htmlToElement(`<div class=\"eq-column-item eq-column-header\">${name} Pinned</div>`,)\r\n    const pinContent = htmlToElement('<div class=\"eq-column-item eq-column-content eq-column-pin\"></div>',)\r\n    const pinElement = getPinPicker(cat, eq)\r\n    pinContent.appendChild(pinElement)\r\n\r\n    // exclusions\r\n    const exclusionHeader = htmlToElement(`<div class=\"eq-column-item eq-column-header\">${name} Excluded</div>`,)\r\n    const exclusionContent = htmlToElement(`<div id=\"eq-${cat}-exclusion\" class=\"eq-column-item eq-column-content eq-column-exclusion\"></div>`,)\r\n\r\n    root.appendChild(pinHeader)\r\n    root.appendChild(pinContent)\r\n    root.appendChild(exclusionHeader)\r\n    root.appendChild(exclusionContent)\r\n    parent!.appendChild(root)\r\n  }\r\n}\r\n\r\nconst _addExclusion = (x: EquipmentMin) => {\r\n  const parent = document.getElementById(`eq-${x.category}-exclusion`)\r\n  parent!.appendChild(getExclusionElement(x))\r\n}\r\n\r\nexport const removeExlusion = (x: EquipmentMin) => {\r\n  const ele = Array.from(document.getElementsByClassName(\"eq-exclusion-ele\")).find((a) => {\r\n    const b = a as HTMLElement\r\n    return b.getAttribute(\"data-name\") === x.name\r\n  }) as HTMLElement\r\n  if (!ele) return\r\n\r\n  ele.remove()\r\n  UserEquipmentSettings.Instance.removeExclusion(x)\r\n  saveToStorage()\r\n}\r\n\r\nexport const removePin = (cat: EquipmentCategory) => {\r\n  const ele = document.getElementById(`eq-${cat}-pin-picker`) as HTMLSelectElement\r\n  UserEquipmentSettings.Instance.removePin(cat)\r\n  ele.selectedIndex = 0\r\n  saveToStorage()\r\n}\r\n\r\nexport const addExclusion = (x: EquipmentMin) => {\r\n  if (UserEquipmentSettings.Instance.hasExclusion(x)) return\r\n  UserEquipmentSettings.Instance.addExclusion(x)\r\n  _addExclusion(x)\r\n  saveToStorage()\r\n}\r\n\r\nexport const addPin = (x: EquipmentMin) => {\r\n  if (x.name === 'None') {\r\n    UserEquipmentSettings.Instance.removePin(x.category)\r\n    return\r\n  }\r\n\r\n  UserEquipmentSettings.Instance.addPin(x)\r\n  saveToStorage()\r\n  const select = document.getElementById(\r\n    `eq-${x.category}-pin-picker`,\r\n  ) as HTMLSelectElement\r\n  select.value = x.name\r\n}\r\n\r\nexport const renderEqSettings = (armor: EquipmentMin[][]) => {\r\n  renderColumns(armor)\r\n\r\n  const raw = getFromStorage()\r\n  if (raw) UserEquipmentSettings.Instance.deserialize(raw)\r\n\r\n  for (const exclusionList of UserEquipmentSettings.Instance.exclusions) {\r\n    for (const x of exclusionList) {\r\n      _addExclusion(x)\r\n    }\r\n  }\r\n  UserEquipmentSettings.Instance.pins.forEach((x, i) => {\r\n    if (x) addPin(x)\r\n    else removePin(i)\r\n  })\r\n}\r\n","const onMouseEnter = (ele: Element) => {\r\n  if (!ele.classList.contains('navbar-selected')) {\r\n    ele.classList.add('navbar-hover')\r\n  }\r\n}\r\n\r\nconst onMouseLeave = (ele: Element) => {\r\n  ele.classList.remove('navbar-hover')\r\n}\r\n\r\nconst onClick = (parent: Element, ele: Element) => {\r\n  for (const li of Array.from(parent.children)) {\r\n    li.classList.remove('navbar-selected')\r\n    li.classList.remove('navbar-hover')\r\n  }\r\n  ele.classList.add('navbar-selected')\r\n\r\n  const selection = ele.getAttribute('data-selection')\r\n  const panels = document.getElementsByClassName('panel')\r\n\r\n  for (const panel of Array.from(panels)) {\r\n    const panelNumber = panel.getAttribute('data-panel-number')\r\n    if (selection === panelNumber) {\r\n      panel.classList.remove('hidden')\r\n    } else {\r\n      panel.classList.add('hidden')\r\n    }\r\n  }\r\n}\r\n\r\n/** initiate navbar state and attaches handlers */\r\nexport const initiateNavbar = () => {\r\n  const ul = document.getElementById('navbar-container')!\r\n    .children[0] as HTMLElement\r\n\r\n  for (const li of Array.from(ul.children)) {\r\n    li.addEventListener('mouseenter', () => onMouseEnter(li))\r\n    li.addEventListener('mouseleave', () => onMouseLeave(li))\r\n    li.addEventListener('click', () => onClick(ul, li))\r\n  }\r\n\r\n  onClick(ul, ul.children[0])\r\n}\r\n","import SkillActivationMap from '../../data-provider/models/skills/SkillActivationMap'\r\nimport SkillActivation from '../../data-provider/models/skills/SkillActivation'\r\nimport { htmlToElement } from '../../helper/html.helper'\r\n\r\nconst getActivationElements = () => {\r\n  return Array.from(document.getElementsByClassName('search-picker-activation'))\r\n}\r\n\r\n/** uncheck all selected skill activations */\r\nconst resetSkillActivations = () => {\r\n  const activations = getActivationElements()\r\n\r\n  activations.forEach((element) => {\r\n    const checkbox = element.children[0] as HTMLInputElement\r\n    const text = element.children[1] as HTMLElement\r\n\r\n    checkbox.checked = false\r\n    text.classList.remove('highlighted')\r\n  })\r\n}\r\n\r\n/** get list of currently selected skill activations */\r\nconst getSkillActivations = (): SkillActivation[] => {\r\n  const activations = getActivationElements()\r\n\r\n  return activations\r\n    // get only checked skills\r\n    .filter((element) => {\r\n      const checkbox = element.children[0] as HTMLInputElement\r\n      return checkbox.checked\r\n    })\r\n    // map to proper data model\r\n    .map((element) => {\r\n      const name = element.textContent!.trim()\r\n      const id = parseInt(element.getAttribute('data-id')!)\r\n      const requiredSkill = parseInt(element.getAttribute('data-skill')!)\r\n      const requiredPoints = parseInt(element.getAttribute('data-points')!)\r\n      const category = parseInt(element.parentElement!.getAttribute('data-category')!)\r\n\r\n      return {\r\n        id,\r\n        name,\r\n        requiredPoints,\r\n        requiredSkill,\r\n        isPositive: requiredPoints > 0,\r\n        category,\r\n      }\r\n    })\r\n}\r\n\r\nconst renderCategories = (skillCategories: string[]) => {\r\n  for (const index in skillCategories) {\r\n    const categoryName = skillCategories[index]\r\n    const node = htmlToElement(`\r\n      <div class=\"search-picker-category\" id=\"search-picker-category-${index}\" data-category=\"${index}\">\r\n        <div class=\"search-picker-category-title banner\">${categoryName}</div>\r\n      </div>\r\n    `)\r\n    document.getElementById('search-skill-picker')!.appendChild(node)\r\n  }\r\n}\r\n\r\nconst renderActivations = (skillActivation: SkillActivationMap) => {\r\n  skillActivation.forEach((activationList) => {\r\n    activationList\r\n      .filter(activation => activation.isPositive)\r\n      .reverse()\r\n      .forEach((activation) => {\r\n        const node = htmlToElement(`\r\n          <div class=\"search-picker-activation\" data-skill=\"${activation.requiredSkill}\" data-points=\"${activation.requiredPoints}\" data-id=\"${activation.id}\">\r\n            <input style=\"float:left;\" type=\"checkbox\">\r\n            <div class=\"search-picker-activation-name\">${activation.name}</div>\r\n          </div>\r\n        `)\r\n        document.getElementById(`search-picker-category-${activation.category}`)!.appendChild(node)\r\n      })\r\n  })\r\n}\r\n\r\nconst attachClickListener = () => {\r\n  const elements = Array.from(document.getElementsByClassName('search-picker-activation'))\r\n  for (const item of elements) {\r\n    item.addEventListener('click', (event) => {\r\n      // tick checkbox\r\n      const target = event.target as Element\r\n      const input: HTMLInputElement = item.children[0] as HTMLInputElement\r\n      if (target.tagName !== 'INPUT') {\r\n        input.checked = !input.checked\r\n      }\r\n\r\n      // add highlight class\r\n      const text = item.children[1]\r\n      input.checked ? text.classList.add('highlighted') : text.classList.remove('highlighted')\r\n    })\r\n  }\r\n}\r\n\r\n/** render all components of skillpicker and attach handlers */\r\nconst renderSkillPicker = (\r\n  skillActivation: SkillActivationMap,\r\n  skillCategories: string[],\r\n) => {\r\n  renderCategories(skillCategories)\r\n  renderActivations(skillActivation)\r\n  attachClickListener()\r\n}\r\n\r\nexport {\r\n  renderSkillPicker,\r\n  getSkillActivations,\r\n  resetSkillActivations,\r\n}\r\n","import { TORSO_UP_ID } from '../../data-provider/data-provider.module'\r\nimport EquipmentCategory from '../../data-provider/models/equipment/EquipmentCategory'\r\nimport EquipmentSkills from '../../data-provider/models/equipment/EquipmentSkills'\r\nimport ScoredSkilledEquipment from './ScoredSkilledEquipment'\r\n\r\nexport default class ArmorEvaluation {\r\n  equipment: ScoredSkilledEquipment[]\r\n  skills: EquipmentSkills = new EquipmentSkills()\r\n  score: number = 0\r\n  totalSlots: number = 0\r\n  torsoUp: number = 0\r\n\r\n  constructor (\r\n    equipment: ScoredSkilledEquipment[],\r\n    skills?: EquipmentSkills,\r\n    score?: number,\r\n    totalSlots?: number,\r\n    torsoUp?: number,\r\n  ) {\r\n    this.equipment = equipment\r\n    if (skills) this.skills = skills\r\n    if (score) this.score = score\r\n    if (totalSlots) this.totalSlots = totalSlots\r\n    if (torsoUp) this.torsoUp = torsoUp\r\n  }\r\n\r\n  getSlots () {\r\n    return this.equipment\r\n      .map(x => x.slots)\r\n      .filter(x => x > 0)\r\n  }\r\n\r\n  getSlotsExceptChest () {\r\n    return this.equipment\r\n      .filter(x => x.category !== EquipmentCategory.CHEST)\r\n      .map(x => x.slots)\r\n      .filter(x => x > 0)\r\n  }\r\n\r\n  copy () {\r\n    return new ArmorEvaluation(\r\n      this.equipment.map(x => x),\r\n      new EquipmentSkills(this.skills),\r\n      this.score,\r\n      this.totalSlots,\r\n      this.torsoUp,\r\n    )\r\n  }\r\n\r\n  addPiece (piece: ScoredSkilledEquipment) {\r\n    if (piece.skills.has(TORSO_UP_ID)) this.torsoUp++\r\n    else {\r\n      if (piece.category === EquipmentCategory.CHEST && this.torsoUp > 0) {\r\n        for (const [k, v] of piece.skills) {\r\n          this.skills.add(k, v * (this.torsoUp + 1))\r\n        }\r\n      } else {\r\n        this.skills.addSkills(piece.skills)\r\n      }\r\n    }\r\n    this.equipment[piece.category] = piece\r\n    this.score = this.score + piece.score\r\n    this.totalSlots = this.totalSlots + piece.slots\r\n  }\r\n}\r\n","import Defense from '../../data-provider/models/equipment/Defense'\r\nimport EquipmentSkills from '../../data-provider/models/equipment/EquipmentSkills'\r\nimport Resistance from '../../data-provider/models/equipment/Resistance'\r\nimport Evaluation from './Evaluation'\r\nimport ArmorPiece from '../../data-provider/models/equipment/ArmorPiece'\r\nimport Decoration from '../../data-provider/models/equipment/Decoration'\r\nimport Charm from '../../data-provider/models/equipment/Charm'\r\nimport SkillActivationMap from '../../data-provider/models/skills/SkillActivationMap'\r\nimport SkillActivation from '../../data-provider/models/skills/SkillActivation'\r\nimport ArmorEvaluation from '../../scorer/models/ArmorEvaluation'\r\nimport DecoEvaluation from '../../scorer/models/DecoEvaluation'\r\nimport EquipmentCategory from '../../data-provider/models/equipment/EquipmentCategory'\r\n\r\nexport default class ArmorSet {\r\n  readonly head: ArmorPiece\r\n  readonly chest: ArmorPiece\r\n  readonly arms: ArmorPiece\r\n  readonly waist: ArmorPiece\r\n  readonly legs: ArmorPiece\r\n  readonly charm: Charm\r\n  readonly decos: Decoration[]\r\n\r\n  evaluation: Evaluation\r\n\r\n  constructor (\r\n    armorEval: ArmorEvaluation,\r\n    decoEval: DecoEvaluation,\r\n    skillActivations: SkillActivationMap,\r\n  ) {\r\n    const chest = armorEval.equipment[EquipmentCategory.CHEST] as unknown as ArmorPiece\r\n\r\n    this.chest = armorEval.torsoUp > 0 ? ArmorSet.applyTorsoUpToChest(chest, armorEval.torsoUp) : chest\r\n    this.head = armorEval.equipment[EquipmentCategory.HEAD] as unknown as ArmorPiece\r\n    this.arms = armorEval.equipment[EquipmentCategory.ARMS] as unknown as ArmorPiece\r\n    this.waist = armorEval.equipment[EquipmentCategory.WAIST] as unknown as ArmorPiece\r\n    this.legs = armorEval.equipment[EquipmentCategory.LEGS] as unknown as ArmorPiece\r\n    this.charm = armorEval.equipment[EquipmentCategory.CHARM] as unknown as Charm\r\n    this.decos = decoEval.decos\r\n    this.evaluation = this.evaluate(armorEval, decoEval, skillActivations)\r\n  }\r\n\r\n  private static applyTorsoUpToChest (chest: ArmorPiece, torsoUp: number): ArmorPiece {\r\n    const newSkills = new EquipmentSkills(chest.skills)\r\n    newSkills.multiply(torsoUp + 1)\r\n    return {\r\n      ...chest,\r\n      skills: newSkills,\r\n    }\r\n  }\r\n\r\n  getPieces (): ArmorPiece[] {\r\n    return [\r\n      this.head,\r\n      this.chest,\r\n      this.arms,\r\n      this.waist,\r\n      this.legs,\r\n    ]\r\n  }\r\n\r\n  evaluate (\r\n    armorEval: ArmorEvaluation,\r\n    decoEval: DecoEvaluation,\r\n    activations: SkillActivationMap,\r\n  ): Evaluation {\r\n    const totalDefense: Defense = { base: 0, max: 0 }\r\n    let totalResistance: Resistance = [0, 0, 0, 0, 0]\r\n\r\n    // iterate over all armor pieces\r\n    for (const piece of this.getPieces()) {\r\n      totalDefense.base += piece.defense.base\r\n      totalDefense.max += piece.defense.max\r\n      totalResistance = piece.resistance.map((res, i) => res + totalResistance[i])\r\n    }\r\n\r\n    // get total skills\r\n    const decoSkills = new EquipmentSkills()\r\n    decoEval.decos.forEach(d => decoSkills.addSkills(d.skills))\r\n    const skills = new EquipmentSkills(armorEval.skills)\r\n    skills.addSkills(new EquipmentSkills(decoSkills))\r\n\r\n    // get activations\r\n    const a: SkillActivation[] = []\r\n    for (const [sId, sVal] of skills) {\r\n      if (Math.abs(sVal) < 10) {\r\n        continue\r\n      }\r\n\r\n      const activationsOfSkill = activations.get(sId)!\r\n        .filter(act => {\r\n          return act.isPositive\r\n            ? sVal >= act.requiredPoints\r\n            : sVal <= act.requiredPoints\r\n        })\r\n      a.push(...activationsOfSkill)\r\n    }\r\n\r\n    // build, save and return model\r\n    const thisEval: Evaluation = {\r\n      defense: totalDefense,\r\n      resistance: totalResistance,\r\n      activations: a,\r\n      skills,\r\n      torsoUp: armorEval.torsoUp,\r\n    }\r\n    this.evaluation = thisEval\r\n    return thisEval\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nenum ArmorType {\r\n  ALL = 0,\r\n  BLADEMASTER = 1,\r\n  GUNNER = 2,\r\n}\r\n\r\nexport default ArmorType\r\n","import { DUMMY_PIECE, MAX_RARITY, TORSO_UP_ID } from '../data-provider/data-provider.module'\r\nimport ArmorPiece from '../data-provider/models/equipment/ArmorPiece'\r\nimport ArmorType from '../data-provider/models/equipment/ArmorType'\r\nimport Charm from '../data-provider/models/equipment/Charm'\r\nimport EquipmentCategory from '../data-provider/models/equipment/EquipmentCategory'\r\nimport EquipmentMin from '../data-provider/models/equipment/EquipmentMin'\r\nimport EquipmentSkills from '../data-provider/models/equipment/EquipmentSkills'\r\nimport Rarity from '../data-provider/models/equipment/Rarity'\r\nimport SkilledItem from '../data-provider/models/equipment/SkilledItem'\r\nimport Slots from '../data-provider/models/equipment/Slots'\r\nimport SkillActivation from '../data-provider/models/skills/SkillActivation'\r\n\r\nconst filterType = (piece: ArmorPiece, type: ArmorType) => {\r\n  return piece.type === ArmorType.ALL || piece.type === type\r\n}\r\n\r\nconst filterExlusions = (piece: ArmorPiece, exclusionNames: string[]) => {\r\n  return !exclusionNames.includes(piece.name)\r\n}\r\n\r\nconst filterRarity = (item: SkilledItem, rarity: Rarity) => {\r\n  return item.rarity <= rarity\r\n}\r\n\r\nconst filterHasSkill = (item: SkilledItem, desiredSkills: SkillActivation[]) => {\r\n  return desiredSkills.some((act) => {\r\n    const s = item.skills.get(act.requiredSkill)\r\n    return s && s > 0\r\n  })\r\n}\r\n\r\nconst applyRarityFilter = (items: SkilledItem[], rarity: Rarity) => {\r\n  if (rarity === MAX_RARITY) return items\r\n  return items.filter(x => filterRarity(x, rarity))\r\n}\r\n\r\nconst applyCharmFilter = (charms: Charm[], skills: SkillActivation[]) => {\r\n  // find highest generic slot charms\r\n  const highestGenericSlotCharm: Charm[] = []\r\n  for (const slots of [3, 2, 1]) {\r\n    const x = charms.find(c => c.slots === slots)\r\n    if (x) {\r\n      const newC: Charm = {\r\n        name: `${slots} Slot Charm`,\r\n        slots: slots as Slots,\r\n        category: EquipmentCategory.CHARM,\r\n        rarity: 0,\r\n        skills: new EquipmentSkills(),\r\n      }\r\n      highestGenericSlotCharm.push(newC)\r\n      break\r\n    }\r\n  }\r\n\r\n  // build list of charms with wanted skills or with slots\r\n  const result = charms\r\n    .filter(x => filterHasSkill(x, skills))\r\n    .concat(...highestGenericSlotCharm)\r\n\r\n  // return list with dummy charm if there are no pieces\r\n  if (result.length === 0) {\r\n    return [{\r\n      ...DUMMY_PIECE,\r\n      category: EquipmentCategory.CHARM,\r\n    }]\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nconst applyArmorFilter = (\r\n  pieces: ArmorPiece[],\r\n  rarity: Rarity,\r\n  type: ArmorType,\r\n  category: EquipmentCategory,\r\n  pin: EquipmentMin | undefined,\r\n  exclusions: EquipmentMin[],\r\n  skills: SkillActivation[]\r\n) => {\r\n  if (pin) return [pieces.find(x => x.name === pin.name)!]\r\n\r\n  const rarityFiltered = applyRarityFilter(pieces, rarity) as ArmorPiece[]\r\n  const typeFiltered = rarityFiltered.filter(p => filterType(p, type))\r\n  const exclusionFiltered = typeFiltered.filter(p => filterExlusions(p, exclusions.map(e => e.name)))\r\n  const sorted = exclusionFiltered.sort((a, b) => b.defense.max - a.defense.max)\r\n\r\n  // find generic slot pieces with highest defense\r\n  const highestGenericSlotPiece: ArmorPiece[] = []\r\n  for (const slots of [3, 2, 1]) {\r\n    const x = sorted.find(p => p.slots === slots)\r\n    if (x) {\r\n      const p: ArmorPiece = {\r\n        type: x.type,\r\n        defense: x.defense,\r\n        resistance: x.resistance,\r\n        name: `${slots} Slot Piece`,\r\n        slots: slots as Slots,\r\n        category: x.category,\r\n        rarity: x.rarity,\r\n        skills: new EquipmentSkills(),\r\n        isGeneric: true,\r\n      }\r\n      highestGenericSlotPiece.push(p)\r\n      break\r\n    }\r\n  }\r\n\r\n  // find piece with torso up with highest defense\r\n  const torsoUpPieces: ArmorPiece[] = [sorted.find(p => p.skills.has(TORSO_UP_ID))]\r\n    .filter(x => x !== undefined)\r\n    .map(x => {\r\n      const renamed: ArmorPiece = {\r\n        ...x!,\r\n        name: 'Torso Up Piece',\r\n        isGeneric: true,\r\n      }\r\n      return renamed\r\n    }) as ArmorPiece[]\r\n\r\n  // build list of pieces with wanted skills, with slots, or with torso up\r\n  const result = sorted\r\n    .filter(x => filterHasSkill(x, skills))\r\n    .concat(...highestGenericSlotPiece)\r\n    .concat(...torsoUpPieces)\r\n\r\n  // return list with dummy element if there are no pieces\r\n  if (result.length === 0) {\r\n    return [{\r\n      ...DUMMY_PIECE,\r\n      type,\r\n      category,\r\n    }]\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport {\r\n  filterType,\r\n  filterRarity,\r\n  filterHasSkill,\r\n  applyRarityFilter,\r\n  applyCharmFilter,\r\n  applyArmorFilter,\r\n}\r\n","import { TORSO_UP_ID } from '../data-provider/data-provider.module'\r\nimport Decoration from '../data-provider/models/equipment/Decoration'\r\nimport EquipmentSkills from '../data-provider/models/equipment/EquipmentSkills'\r\nimport Slots from '../data-provider/models/equipment/Slots'\r\nimport DecoPermutation from './models/DecoPermutation'\r\nimport ScoredSkilledEquipment from './models/ScoredSkilledEquipment'\r\n\r\n/** get score of a skill map relative to wanted skills */\r\nconst getScoreFromSkillMap = (m: EquipmentSkills, w: EquipmentSkills): number => {\r\n  let score = 0\r\n  for (const [sId] of w) {\r\n    score += m.get(sId) || 0\r\n  }\r\n\r\n  return score\r\n}\r\n\r\nconst scoreTorsoUpPieces = (piece: ScoredSkilledEquipment, maxTorsoScore: number) => {\r\n  if (piece.skills.has(TORSO_UP_ID)) {\r\n    const newPiece: ScoredSkilledEquipment = {\r\n      ...piece,\r\n      score: maxTorsoScore,\r\n    }\r\n\r\n    return newPiece\r\n  }\r\n\r\n  return piece\r\n}\r\n\r\n/** apply score to a list of decos */\r\nconst evaluateListOfDecos = (decos: Decoration[], wantedSkills: EquipmentSkills): DecoPermutation => {\r\n  const skillMap: EquipmentSkills = new EquipmentSkills()\r\n  decos.forEach(deco => skillMap.addSkills(deco.skills))\r\n\r\n  // get max of default and computed score\r\n  // default score can only be higher than computed when the decos of 2 wanted skills cancel each other out (e.g. handicraft and sharpness)\r\n  const computedScore = getScoreFromSkillMap(skillMap, wantedSkills)\r\n  const defaultScore = Math.max(...Array.from(skillMap.values()))\r\n  const score = (Math.max(computedScore, defaultScore))\r\n\r\n  return {\r\n    skills: skillMap,\r\n    decos,\r\n    score,\r\n  }\r\n}\r\n\r\n/**\r\n * checks if deco permutation is the same or better than comparison in respect to wanted skills\r\n * returns 0 if better/different, returns 1 if same, returns 2 if worse\r\n */\r\nconst decoPermWorseOrSameAsComparison = (perm: DecoPermutation, comparison: DecoPermutation, wantedSkills: EquipmentSkills) => {\r\n  const arr = []\r\n  for (const w of Array.from(wantedSkills.entries())) {\r\n    const wId = w[0]\r\n    const a = perm.skills.get(wId)\r\n    const b = comparison.skills.get(wId)\r\n\r\n    if (a > b) return 0\r\n    if (a === b) arr.push(1)\r\n    else arr.push(2)\r\n  }\r\n  return Math.max(...arr)\r\n}\r\n\r\n/** returns a mapping of slot level to the amount of score it is worth */\r\nconst getDecoSlotScoreMap = (decoPermutationsPerSlotLevel: Map<Slots, DecoPermutation[]>): Map<number, number> => {\r\n  const m = new Map(Array.from(decoPermutationsPerSlotLevel.entries()).map(([slotLevel, permList]) => {\r\n    return [slotLevel, Math.max(...permList.map(x => x.score))]\r\n  }))\r\n  m.set(0, 0)\r\n\r\n  return m\r\n}\r\n\r\n/** prune a list of deco permutations of all duplicates and downgrades */\r\nconst pruneDecoPermutations = (permList: DecoPermutation[], wantedSkills: EquipmentSkills): DecoPermutation[] => {\r\n  // we go through entire list left through right => x\r\n  // for each ele, we check the entire list again => y\r\n  // if y is an upgrade of x, then x will be filtered out\r\n  // if y is the same as x, and y is further right in the list, then x will be filtered\r\n  // only if x has no upgrade, and no element right of it that is the same will it remain in the list\r\n  const res = permList\r\n    .filter((x, i) => {\r\n      let shouldBeFiltered: boolean = false\r\n\r\n      for (let j = 0; j < permList.length; j++) {\r\n        if (i === j) continue\r\n\r\n        const y = permList[j]\r\n        const v = decoPermWorseOrSameAsComparison(x, y, wantedSkills)\r\n\r\n        if (v === 2) {\r\n          shouldBeFiltered = true\r\n          break\r\n        }\r\n\r\n        if (j > i && v === 1) {\r\n          shouldBeFiltered = true\r\n          break\r\n        }\r\n      }\r\n\r\n      return !shouldBeFiltered\r\n    })\r\n\r\n  return res\r\n}\r\n\r\nexport {\r\n  getScoreFromSkillMap,\r\n  scoreTorsoUpPieces,\r\n  evaluateListOfDecos,\r\n  decoPermWorseOrSameAsComparison,\r\n  getDecoSlotScoreMap,\r\n  pruneDecoPermutations,\r\n}\r\n","import Decoration from '../../data-provider/models/equipment/Decoration'\r\nimport EquipmentSkills from '../../data-provider/models/equipment/EquipmentSkills'\r\nimport Slots from '../../data-provider/models/equipment/Slots'\r\nimport DecoMinSlotMap from './DecoMinSlotMap'\r\nimport DecoPermutation from './DecoPermutation'\r\n\r\nexport default class DecoEvaluation {\r\n  decoMinSlotMap: DecoMinSlotMap\r\n  unusedSlotsSum: number\r\n  missingSkills: EquipmentSkills\r\n  decos: Decoration[] = []\r\n  requiredSlots: number = 0\r\n\r\n  constructor (\r\n    decoMinSlotMap: DecoMinSlotMap,\r\n    unusedSlotsSum: number,\r\n    missingSkills: EquipmentSkills,\r\n    decos?: Decoration[],\r\n    requiredSlots?: number,\r\n  ) {\r\n    this.decoMinSlotMap = decoMinSlotMap\r\n    this.unusedSlotsSum = unusedSlotsSum\r\n    this.missingSkills = missingSkills\r\n    if (decos) this.decos = decos\r\n    this.requiredSlots = requiredSlots || this.calculateRequiredSlots()\r\n  }\r\n\r\n  copy () {\r\n    return new DecoEvaluation(\r\n      this.decoMinSlotMap,\r\n      this.unusedSlotsSum,\r\n      new EquipmentSkills(this.missingSkills),\r\n      this.decos.map(x => x),\r\n      this.requiredSlots,\r\n    )\r\n  }\r\n\r\n  calculateRequiredSlots (): number {\r\n    let newRequiredSlots: number = 0\r\n    for (const w of this.missingSkills) {\r\n      const sId = w[0]\r\n      const sVal = w[1]\r\n      newRequiredSlots += this.decoMinSlotMap.getMinRequiredSlotsForSkill(sId, sVal)\r\n    }\r\n    this.requiredSlots = newRequiredSlots\r\n    return newRequiredSlots\r\n  }\r\n\r\n  addPerm (perm: DecoPermutation, slotLevel: Slots) {\r\n    this.unusedSlotsSum -= slotLevel\r\n    this.decos.push(...perm.decos)\r\n\r\n    // use custom loop instead of EquipmentSkills.substractSkills and DecoEvaluation.calculateRequiredSlots\r\n    // to save on processing because this method is called a lot\r\n    let newRequiredSlots: number = 0\r\n    for (const w of this.missingSkills) {\r\n      const sId = w[0]\r\n      const sVal = w[1]\r\n\r\n      const newVal = sVal - perm.skills.get(sId)\r\n      this.missingSkills.set(sId, newVal)\r\n      newRequiredSlots += this.decoMinSlotMap.getMinRequiredSlotsForSkill(sId, newVal)\r\n    }\r\n\r\n    this.requiredSlots = newRequiredSlots\r\n  }\r\n}\r\n","import Decoration from '../../data-provider/models/equipment/Decoration'\r\nimport EquipmentSkills from '../../data-provider/models/equipment/EquipmentSkills'\r\nimport GameID from '../../data-provider/models/GameId'\r\n\r\nfunction * decoVariationMinSlotsGenerator (\r\n  decosOfSkill: Decoration[],\r\n  skillId: GameID,\r\n  requiredPoints: number,\r\n  requiredSlots: number,\r\n  existingPoints: number,\r\n): Generator<number, void, undefined> {\r\n  for (const deco of decosOfSkill) {\r\n    const newExistingPoints = existingPoints + deco.skills.get(skillId)!\r\n    const newRequiredSlots = requiredSlots + deco.requiredSlots\r\n\r\n    if (newExistingPoints >= requiredPoints) {\r\n      yield newRequiredSlots\r\n    } else {\r\n      yield * decoVariationMinSlotsGenerator(\r\n        decosOfSkill,\r\n        skillId,\r\n        requiredPoints,\r\n        newRequiredSlots,\r\n        newExistingPoints,\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n/** calculates and saves how many slots are required to get x points of a certain skill */\r\nexport default class DecoMinSlotMap {\r\n  private static readonly DUMMY_SCORE = 1000\r\n\r\n  private decorationsOfSkillMap: Map<GameID, Decoration[]> = new Map()\r\n  private calculations: Map<GameID, Map<number, number>> = new Map()\r\n\r\n  constructor (allDecos: Decoration[], wantedSkills: EquipmentSkills) {\r\n    for (const w of wantedSkills) {\r\n      const sId = w[0]\r\n\r\n      // set decorations of skill\r\n      const decosOfSkill = allDecos\r\n        .filter(x => x.skills.get(sId) > 0)\r\n        .sort((a, b) => b.skills.get(sId) - a.skills.get(sId))\r\n      this.decorationsOfSkillMap.set(sId, decosOfSkill)\r\n\r\n      // init calculation map of that skill\r\n      this.calculations.set(sId, new Map())\r\n    }\r\n  }\r\n\r\n  private calculateMinRequiredSlots (skillId: GameID, skillPoints: number): number {\r\n    const decosOfSkill = this.decorationsOfSkillMap.get(skillId)!\r\n    if (decosOfSkill.length === 0) return DecoMinSlotMap.DUMMY_SCORE\r\n\r\n    let minRequiredSlots = DecoMinSlotMap.DUMMY_SCORE\r\n    for (const reqSlots of decoVariationMinSlotsGenerator(decosOfSkill, skillId, skillPoints, 0, 0)) {\r\n      if (reqSlots < minRequiredSlots) minRequiredSlots = reqSlots\r\n    }\r\n\r\n    return minRequiredSlots\r\n  }\r\n\r\n  getMinRequiredSlotsForSkill (skillId: GameID, skillPoints: number): number {\r\n    const m = this.calculations.get(skillId)!\r\n\r\n    if (skillPoints <= 0) return 0\r\n    if (m.has(skillPoints)) return m.get(skillPoints)!\r\n\r\n    const newCalc = this.calculateMinRequiredSlots(skillId, skillPoints)\r\n    m.set(skillPoints, newCalc)\r\n    return newCalc\r\n  }\r\n}\r\n","import { DUMMY_PIECE } from '../data-provider/data-provider.module'\r\nimport ArmorPiece from '../data-provider/models/equipment/ArmorPiece'\r\nimport ArmorType from '../data-provider/models/equipment/ArmorType'\r\nimport Charm from '../data-provider/models/equipment/Charm'\r\nimport Decoration from '../data-provider/models/equipment/Decoration'\r\nimport EquipmentCategory from '../data-provider/models/equipment/EquipmentCategory'\r\nimport EquipmentSkills from '../data-provider/models/equipment/EquipmentSkills'\r\nimport SkilledEquipment from '../data-provider/models/equipment/SkilledEquipment'\r\nimport Slots from '../data-provider/models/equipment/Slots'\r\nimport StaticSkillData from '../data-provider/models/skills/StaticSkillData'\r\nimport ArmorEvaluation from '../scorer/models/ArmorEvaluation'\r\nimport ArmorSet from './models/ArmorSet'\r\nimport DecoPermutation from '../scorer/models/DecoPermutation'\r\nimport SearchConstraints from './models/SearchConstraints'\r\nimport ScoredSkilledEquipment from '../scorer/models/ScoredSkilledEquipment'\r\nimport { applyArmorFilter, applyCharmFilter, applyRarityFilter, filterHasSkill } from '../data-filter/data-filter.module'\r\nimport { pruneDecoPermutations, evaluateListOfDecos, getDecoSlotScoreMap, getScoreFromSkillMap, scoreTorsoUpPieces } from '../scorer/scorer.module'\r\nimport DecoEvaluation from '../scorer/models/DecoEvaluation'\r\nimport DecoMinSlotMap from '../scorer/models/DecoMinSlotMap'\r\n\r\n// #region initial search data\r\n/** get initial armor eval with all dummy pieces */\r\nconst getIntiailArmorEval = (type: ArmorType) => {\r\n  const categoryArray = [\r\n    EquipmentCategory.HEAD,\r\n    EquipmentCategory.CHEST,\r\n    EquipmentCategory.ARMS,\r\n    EquipmentCategory.WAIST,\r\n    EquipmentCategory.LEGS,\r\n    EquipmentCategory.CHARM,\r\n  ]\r\n\r\n  const pieces: ScoredSkilledEquipment[] = categoryArray.map((x) => {\r\n    return {\r\n      ...DUMMY_PIECE,\r\n      type,\r\n      category: x,\r\n      score: 0,\r\n    }\r\n  })\r\n\r\n  return new ArmorEvaluation(pieces)\r\n}\r\n\r\n/** returns all the ways you can possibly arrange the viable decorations on a given slot level (1, 2, 3) */\r\nconst getDecorationVariationsPerSlotLevel = (\r\n  decorations: Decoration[],\r\n  wantedSkills: EquipmentSkills,\r\n): Map<Slots, DecoPermutation[]> => {\r\n  // get all decorations of specific slot\r\n  const rawOneSlots = decorations.filter(d => d.requiredSlots === 1)\r\n  const rawTwoSlots = decorations.filter(d => d.requiredSlots === 2)\r\n  const rawThreeSlots = decorations.filter(d => d.requiredSlots === 3)\r\n\r\n  // create dummy for unused slots\r\n  const dummy: Decoration = {\r\n    name: 'None',\r\n    rarity: 0,\r\n    requiredSlots: 0,\r\n    skills: new EquipmentSkills(),\r\n  }\r\n\r\n  // get all variations for 1 slot\r\n  const oneSlotVariations = rawOneSlots.map(x => [x]).concat([[dummy]])\r\n  const oneSlotEvaluated = pruneDecoPermutations(oneSlotVariations.map(x => evaluateListOfDecos(x, wantedSkills)), wantedSkills)\r\n  const prunedOneSlotVariations = oneSlotEvaluated.map(x => x.decos)\r\n\r\n  // get all variations for 2 slots\r\n  const twoOneSlotDecoVariations = []\r\n  for (let i = 0; i < prunedOneSlotVariations.length; i++) {\r\n    const x = prunedOneSlotVariations[i]\r\n    for (let j = Math.abs(i); j < prunedOneSlotVariations.length; j++) {\r\n      const y = prunedOneSlotVariations[j]\r\n      twoOneSlotDecoVariations.push(x.concat(y))\r\n    }\r\n  }\r\n  const twoSlotVariations = rawTwoSlots\r\n    .map(x => [x])\r\n    .concat(twoOneSlotDecoVariations)\r\n  const twoSlotEvaluated = pruneDecoPermutations(twoSlotVariations.map(x => evaluateListOfDecos(x, wantedSkills)), wantedSkills)\r\n\r\n  // get all variations for 3 slots\r\n  const threeOneSlotDecoVariations = []\r\n  for (let i = 0; i < prunedOneSlotVariations.length; i++) {\r\n    const x = prunedOneSlotVariations[i]\r\n    for (let j = Math.abs(i); j < twoOneSlotDecoVariations.length; j++) {\r\n      const y = twoOneSlotDecoVariations[j]\r\n      threeOneSlotDecoVariations.push(x.concat(y))\r\n    }\r\n  }\r\n  const oneAndTwoSlotDecoVariations = []\r\n  for (const oneSlot of rawOneSlots) {\r\n    for (const twoSlot of rawTwoSlots) {\r\n      oneAndTwoSlotDecoVariations.push([oneSlot, twoSlot])\r\n    }\r\n  }\r\n  const threeSlotVariations = rawThreeSlots\r\n    .map(x => [x])\r\n    .concat(oneAndTwoSlotDecoVariations)\r\n    .concat(threeOneSlotDecoVariations)\r\n  const threeSlotEvaluated = pruneDecoPermutations(threeSlotVariations.map(x => evaluateListOfDecos(x, wantedSkills)), wantedSkills)\r\n\r\n  // return pruned evaluations\r\n  return new Map([\r\n    [0, []],\r\n    [1, oneSlotEvaluated],\r\n    [2, twoSlotEvaluated],\r\n    [3, threeSlotEvaluated],\r\n  ])\r\n}\r\n// #endregion\r\n\r\n// #region search logic\r\nfunction * getArmorPermutations (\r\n  equipment: ScoredSkilledEquipment[][],\r\n  previousEval: ArmorEvaluation,\r\n  maximumRemainingScore: number[],\r\n  requiredScore: number,\r\n  categoryIndex: number,\r\n): Generator<ArmorEvaluation, void, undefined> {\r\n  for (const piece of equipment[categoryIndex]) {\r\n    // create and eval new set\r\n    const thisEval = previousEval.copy()\r\n    thisEval.addPiece(piece)\r\n\r\n    // yield it if score is sufficient\r\n    if (thisEval.score >= requiredScore) yield thisEval\r\n    // otherwise check if its possible to still find sets on this branch and break if not\r\n    else {\r\n      if ((thisEval.score + maximumRemainingScore[categoryIndex]) < requiredScore) break\r\n    }\r\n\r\n    // then yield the next loop if there is one\r\n    if (categoryIndex > 0) {\r\n      yield * getArmorPermutations(\r\n        equipment,\r\n        thisEval,\r\n        maximumRemainingScore,\r\n        requiredScore,\r\n        categoryIndex - 1,\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nfunction * getDecoPermutations (\r\n  decoPermutationsPerSlotLevel: Map<Slots, DecoPermutation[]>,\r\n  slotsOfArmor: Slots[],\r\n  previousEval: DecoEvaluation,\r\n  slotIndex: number,\r\n): Generator<DecoEvaluation, void, undefined> {\r\n  const slotLevel = slotsOfArmor[slotIndex]\r\n  for (const perm of decoPermutationsPerSlotLevel.get(slotLevel)!) {\r\n    // create and eval new set\r\n    const thisEval = previousEval.copy()\r\n    thisEval.addPerm(perm, slotLevel)\r\n\r\n    // yield it if score is sufficient\r\n    if (thisEval.requiredSlots <= 0) yield thisEval\r\n    // otherwise check if its possible to still find sets on this branch and break if not\r\n    else {\r\n      if (thisEval.unusedSlotsSum < thisEval.requiredSlots) continue\r\n    }\r\n\r\n    // then yield the next loop if there is one\r\n    if (slotIndex > 0) {\r\n      yield * getDecoPermutations(\r\n        decoPermutationsPerSlotLevel,\r\n        slotsOfArmor,\r\n        thisEval,\r\n        slotIndex - 1,\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst transformTorsoUpDecoPermutation = (perm: DecoPermutation, torsoUp: number): DecoPermutation => {\r\n  const factor = torsoUp + 1\r\n\r\n  const score = perm.score * factor\r\n  const decos = perm.decos.map(d => {\r\n    const newSkills = new EquipmentSkills(d.skills)\r\n    newSkills.multiply(factor)\r\n    const newDeco: Decoration = {\r\n      ...d,\r\n      affectedByTorsoUp: true,\r\n      name: d.name.concat(' (TorsoUp)'),\r\n      skills: newSkills,\r\n    }\r\n\r\n    return newDeco\r\n  })\r\n  const newTotalSkills = new EquipmentSkills(perm.skills)\r\n  newTotalSkills.multiply(factor)\r\n  const skills = newTotalSkills\r\n\r\n  return {\r\n    score,\r\n    decos,\r\n    skills,\r\n  }\r\n}\r\n\r\nconst findSufficientDecoPermutation = (\r\n  armorEval: ArmorEvaluation,\r\n  constraints: SearchConstraints,\r\n  wantedSkills: EquipmentSkills,\r\n  decoMinSlotMap: DecoMinSlotMap,\r\n  decoPermutationsPerSlotLevel: Map<Slots, DecoPermutation[]>,\r\n): DecoEvaluation | undefined => {\r\n  const _inner = (\r\n    _slotList: Slots[],\r\n    _initialEval: DecoEvaluation,\r\n  ): DecoEvaluation | undefined => {\r\n    if (_initialEval.requiredSlots <= 0) return _initialEval\r\n    if (_initialEval.unusedSlotsSum < _initialEval.requiredSlots) return undefined\r\n    if (_slotList.length === 0) return undefined\r\n\r\n    const decoEvaluation = getDecoPermutations(\r\n      decoPermutationsPerSlotLevel,\r\n      _slotList,\r\n      _initialEval,\r\n      _slotList.length - 1,\r\n    ).next().value\r\n\r\n    if (decoEvaluation) return decoEvaluation\r\n    return undefined\r\n  }\r\n\r\n  let r: DecoEvaluation | undefined\r\n  const torsoSlots = armorEval.equipment[EquipmentCategory.CHEST].slots\r\n  const missingSkills = new EquipmentSkills(Array.from(wantedSkills).map(([sId, sVal]) => {\r\n    return [sId, sVal - armorEval.skills.get(sId)]\r\n  }))\r\n  const slotSum = armorEval.totalSlots + constraints.weaponSlots\r\n\r\n  if (armorEval.torsoUp > 0 && torsoSlots > 0) {\r\n    // if torso up, fill the chest slots and then iterate over permutations from there\r\n    const slotList = armorEval.getSlotsExceptChest().concat(constraints.weaponSlots ? constraints.weaponSlots : [])\r\n    const slotSumWithoutTorso = slotSum - torsoSlots\r\n    const initialEval = new DecoEvaluation(decoMinSlotMap, slotSumWithoutTorso, missingSkills)\r\n    for (const chestPerm of decoPermutationsPerSlotLevel.get(torsoSlots)!) {\r\n      const transformedPerm = transformTorsoUpDecoPermutation(chestPerm, armorEval.torsoUp)\r\n      const copiedEval = initialEval.copy()\r\n      copiedEval.addPerm(transformedPerm, torsoSlots)\r\n      const temp = _inner(slotList, copiedEval)\r\n      if (temp) {\r\n        r = temp\r\n        break\r\n      }\r\n    }\r\n  } else {\r\n    // otherwise just iterate over permutations\r\n    const slotList = armorEval.getSlots().concat(constraints.weaponSlots ? constraints.weaponSlots : [])\r\n    r = _inner(slotList, new DecoEvaluation(decoMinSlotMap, armorEval.totalSlots + constraints.weaponSlots, missingSkills))\r\n  }\r\n\r\n  return r\r\n}\r\n\r\nconst findSets = (\r\n  armorPieces: ArmorPiece[][],\r\n  decorations: Decoration[],\r\n  charms: Charm[],\r\n  constraints: SearchConstraints,\r\n  skillData: StaticSkillData,\r\n) => {\r\n  const wantedSkills: EquipmentSkills = new EquipmentSkills(constraints.skillActivations.map(x => [x.requiredSkill, x.requiredPoints]))\r\n  const decoPermutationsPerSlotLevel = getDecorationVariationsPerSlotLevel(decorations, wantedSkills)\r\n  const slotScoreMap = getDecoSlotScoreMap(decoPermutationsPerSlotLevel)\r\n  const initialArmorEval = getIntiailArmorEval(constraints.armorType)\r\n  const wantedScore = getScoreFromSkillMap(wantedSkills, wantedSkills) - slotScoreMap.get(constraints.weaponSlots)!\r\n  const decoMinSlotMap = new DecoMinSlotMap(decorations, wantedSkills)\r\n\r\n  const skilledEquipment: SkilledEquipment[][] = armorPieces\r\n  skilledEquipment.push(charms)\r\n\r\n  // score equipment\r\n  const scoredEquipment: ScoredSkilledEquipment[][] = skilledEquipment\r\n    .map(equList => equList.map((equ) => {\r\n      const score = slotScoreMap.get(equ.slots)! + getScoreFromSkillMap(equ.skills, wantedSkills)\r\n      return {\r\n        ...equ,\r\n        score,\r\n      }\r\n    }))\r\n\r\n  // reorder equipment and manually rescore torso up pieces\r\n  const maxTorsoScore = Math.max(...scoredEquipment[1].map(x => x.score))\r\n  const readjustedEquipment = [\r\n    scoredEquipment[1], // chest first to simplify torso up calculation\r\n    scoredEquipment[0].map(x => scoreTorsoUpPieces(x, maxTorsoScore)),\r\n    scoredEquipment[2], // arms cant have torso up\r\n    scoredEquipment[3].map(x => scoreTorsoUpPieces(x, maxTorsoScore)),\r\n    scoredEquipment[4].map(x => scoreTorsoUpPieces(x, maxTorsoScore)),\r\n    scoredEquipment[5], // charm cant have torso up\r\n  ]\r\n\r\n  // sort equipment by score\r\n  const sorted = readjustedEquipment.map(l => l.sort((a, b) => b.score - a.score))\r\n\r\n  // get list of maximum score of remaining iterations\r\n  const maximumRemainingScore = [0]\r\n  let sumOfAllIterations = 0\r\n  sorted.map(x => x[0].score).forEach((m) => {\r\n    sumOfAllIterations += m\r\n    maximumRemainingScore.push(sumOfAllIterations)\r\n  })\r\n\r\n  let length = 0\r\n  const validSets: ArmorSet[] = []\r\n  // try all viable armor permuations\r\n  for (const armorEvaluation of getArmorPermutations(\r\n    sorted,\r\n    initialArmorEval,\r\n    maximumRemainingScore,\r\n    wantedScore,\r\n    sorted.length - 1,\r\n  )) {\r\n    // find first sufficient deco eval\r\n    const decoEvaluation = findSufficientDecoPermutation(\r\n      armorEvaluation,\r\n      constraints,\r\n      wantedSkills,\r\n      decoMinSlotMap,\r\n      decoPermutationsPerSlotLevel,\r\n    )\r\n\r\n    // build and append set if there is any deco eval\r\n    if (decoEvaluation) {\r\n      const set = new ArmorSet(armorEvaluation, decoEvaluation, skillData.skillActivation)\r\n      validSets.push(set)\r\n\r\n      // exit if enough sets found\r\n      if (length === constraints.limit - 1) break\r\n      length++\r\n    }\r\n  }\r\n\r\n  return validSets\r\n}\r\n// #endregion\r\n\r\n// #region entrypoint\r\nconst search = (\r\n  armorPieces: ArmorPiece[][],\r\n  decorations: Decoration[],\r\n  charms: Charm[],\r\n  constraints: SearchConstraints,\r\n  skillData: StaticSkillData,\r\n) => {\r\n  const a = armorPieces\r\n    .map((piecesOfCategory, i) => {\r\n      return applyArmorFilter(piecesOfCategory, constraints.armorRarity, constraints.armorType, i, constraints.pins[i], constraints.exclusions[i], constraints.skillActivations)\r\n    })\r\n  const c = applyCharmFilter(charms, constraints.skillActivations)\r\n  const d = applyRarityFilter(decorations, constraints.decoRarity)\r\n    .filter(x => filterHasSkill(x, constraints.skillActivations))\r\n\r\n  return findSets(\r\n    a,\r\n    d as Decoration[],\r\n    c,\r\n    constraints,\r\n    skillData,\r\n  )\r\n}\r\n// #endregion\r\n\r\nexport { search }\r\n","import Rarity from '../../data-provider/models/equipment/Rarity'\r\nimport Slots from '../../data-provider/models/equipment/Slots'\r\nimport GlobalSettings from '../models/GlobalSettings'\r\n\r\nexport const getGlobalSettings = (): GlobalSettings => {\r\n  const armorSelect = document.getElementById('armor-type') as HTMLSelectElement\r\n  const weaponSlots = document.getElementById('weapon-slots') as HTMLSelectElement\r\n  const armorRarity = document.getElementById('armor-rarity') as HTMLSelectElement\r\n  const decoRarity = document.getElementById('deco-rarity') as HTMLSelectElement\r\n  const limit = document.getElementById('search-limit') as HTMLInputElement\r\n\r\n  return {\r\n    armorType: parseInt(armorSelect.value),\r\n    weaponSlots: parseInt(weaponSlots.value) as Slots,\r\n    armorRarity: parseInt(armorRarity.value) as Rarity,\r\n    decoRarity: parseInt(decoRarity.value) as Rarity,\r\n    limit: parseInt(limit.value),\r\n  }\r\n}\r\n","import ArmorSet from '../../searcher/models/ArmorSet'\r\nimport SearchConstraints from '../../searcher/models/SearchConstraints'\r\nimport StaticSkillData from '../../data-provider/models/skills/StaticSkillData'\r\nimport UserEquipmentSettings from '../../data-provider/models/user/UserEquipmentSettings'\r\nimport { htmlToElement } from '../../helper/html.helper'\r\nimport SkillActivation from '../../data-provider/models/skills/SkillActivation'\r\nimport SkillActivationMap from '../../data-provider/models/skills/SkillActivationMap'\r\nimport { addExclusion, addPin, removeExlusion, removePin } from './eq-settings.component'\r\n\r\nexport function * moreSkillsIterator (skillActivations: SkillActivationMap) {\r\n  const rContainer = clearAndGetResultsContainer()\r\n  const countDiv = document.createElement('div')\r\n  rContainer.appendChild(countDiv)\r\n\r\n  const totalActCount = Array.from(skillActivations.values())\r\n    .reduce((sum, c) => sum + c.length, 0)\r\n\r\n  for (let i = 0; i < totalActCount; i++) {\r\n    countDiv.innerHTML = `Checked ${i} possible skills ...`\r\n    yield i\r\n  }\r\n}\r\n\r\nconst onSetClick = (tbNode: Node, viewGetter: () => Node) => {\r\n  const children = tbNode.childNodes\r\n  const finalNode = children[children.length - 1] as HTMLTableRowElement\r\n\r\n  // toggle if details have already been rendered\r\n  if (finalNode.classList.contains('result-set-details')) {\r\n    finalNode.classList.toggle('hidden')\r\n    return\r\n  }\r\n\r\n  // render and append them otherwise\r\n  tbNode.appendChild(viewGetter())\r\n}\r\n\r\nconst PINS_OR_EXCL_ACTIVE_BANNER = htmlToElement(`\r\n  <div class=\"results-banner banner\">\r\n    You have some pins or exclusions active, which may be limiting results. You may find some results by removing those pins or exclusions.\r\n  <div>\r\n`)\r\n\r\nconst getExpandedView = (set: ArmorSet, skillData: StaticSkillData, searchParams: SearchConstraints) => {\r\n  // build header\r\n  const header = htmlToElement(`\r\n    <tr>\r\n      <th>Skill</th>\r\n      <th style=\"width: 6%\">Weapon</th>\r\n      <th style=\"width: 6%\">Head</th>\r\n      <th style=\"width: 6%\">Chest</th>\r\n      <th style=\"width: 6%\">Arms</th>\r\n      <th style=\"width: 6%\">Waist</th>\r\n      <th style=\"width: 6%\">Legs</th>\r\n      <th style=\"width: 6%\">Charm</th>\r\n      <th style=\"width: 6%\">Deco</th>\r\n      <th style=\"width: 6%\">Total</th>\r\n      <th>Active</th>\r\n    </tr>\r\n  `)\r\n\r\n  // build skills rows\r\n  const skillRows = Array.from(set.evaluation!.skills.entries())\r\n    .sort(([_a, a], [_b, b]) => b - a)\r\n    .map(([sId, sVal]) => {\r\n      const r = document.createElement('tr')\r\n\r\n      const computedDecoValue = set.decos\r\n        .map(d => d.skills.get(sId)!)\r\n        .reduce((sum, c) => sum + c, 0)\r\n\r\n      r.appendChild(htmlToElement(`<td>${skillData.skillName.get(sId) ? skillData.skillName.get(sId)! : ''}</td>`))\r\n      r.appendChild(htmlToElement('<td></td>')) // weapon\r\n      for (const p of set.getPieces()) {\r\n        r.append(htmlToElement(`<td>${p.skills.get(sId) ? p.skills.get(sId)! : ''}</td>`))\r\n      }\r\n      r.append(htmlToElement(`<td>${set.charm.skills.get(sId) ? set.charm.skills.get(sId)! : ''}</td>`))\r\n      r.append(htmlToElement(`<td>${computedDecoValue || ''}</td>`))\r\n      r.append(htmlToElement(`<td>${sVal}</td>`))\r\n      const possibleAct = set.evaluation!.activations.find(a => a.requiredSkill === sId)\r\n      if (possibleAct) r.append(htmlToElement(`<td ${!possibleAct.isPositive ? 'class=\"neg-skill\"' : ''}}\">${possibleAct.name}</td>`))\r\n      return r\r\n    })\r\n\r\n  // build slot list\r\n  const slotRow = document.createElement('tr')\r\n  slotRow.appendChild(htmlToElement('<td>Slots</td>'))\r\n  const rawSlowList = [searchParams.weaponSlots, ...set.getPieces().map(x => x.slots), set.charm.slots]\r\n  rawSlowList.forEach(s => slotRow.appendChild(htmlToElement(`<td>${s}</td>`)))\r\n\r\n  // append elements to table\r\n  const skillTable = htmlToElement('<table class=\"result-set-skill-table\"></table>')\r\n  skillTable.appendChild(header)\r\n  skillRows.forEach(x => skillTable.appendChild(x))\r\n  skillTable.appendChild(slotRow)\r\n\r\n  // build deco list\r\n  const decoNameMap: Map<string, number> = new Map()\r\n  for (const deco of set.decos) {\r\n    const name = deco.name\r\n    decoNameMap.set(name, 1 + (decoNameMap.get(name) || 0))\r\n  }\r\n  const decoNameList = Array.from(decoNameMap.entries())\r\n    .map(([name, amount]) => `${amount} x ${name}`)\r\n  const decoNameString = decoNameList.join(', ')\r\n  const decoNameContainer = htmlToElement(`\r\n    <div><span>${decoNameString}</span></div>\r\n  `)\r\n\r\n  // build piece table\r\n  const pieceTable = htmlToElement('<table class=\"result-set-piece-table\"></table>')\r\n  const pieceTableHeader = htmlToElement('<tr><th>Def</th><th>Piece</th><th>Pin</th><th>Excl</th></tr>')\r\n  pieceTable.appendChild(pieceTableHeader)\r\n  for (const piece of set.getPieces()) {\r\n    const pieceTableEle = document.createElement(\"tr\")\r\n    const pieceTableDef = htmlToElement(`<td style=\"width: 20%;\">${piece.defense.max}</td>`)\r\n    const pieceTableName = htmlToElement(`<td style=\"width: 50%;\">${piece.name}</td>`)\r\n\r\n    const pieceTablePin = (piece.isGeneric\r\n      ? htmlToElement(`<td style=\"user-select: none; width: 15%;\"></td>`)\r\n      : htmlToElement(`<td style=\"user-select: none; width: 15%; cursor: pointer;\">✓</td>`)) as HTMLElement\r\n    const pieceTableExcl = (piece.isGeneric\r\n      ? htmlToElement(`<td style=\"user-select: none; width: 15%;\"></td>`)\r\n      : htmlToElement(`<td style=\"user-select: none; width: 15%; cursor: pointer;\">X</td>`)) as HTMLElement\r\n    if (UserEquipmentSettings.Instance.hasPin(piece)) pieceTablePin.classList.add(\"pin-highlighted\")\r\n    if (UserEquipmentSettings.Instance.hasExclusion(piece)) pieceTableExcl.classList.add(\"excl-highlighted\")\r\n\r\n    pieceTablePin.addEventListener(\"click\", () => {\r\n      if (piece.isGeneric) return\r\n\r\n      if (UserEquipmentSettings.Instance.hasPin(piece)) {\r\n        removePin(piece.category)\r\n        pieceTablePin.classList.remove(\"pin-highlighted\")\r\n      }\r\n      else {\r\n        addPin(piece)\r\n        pieceTablePin.classList.add(\"pin-highlighted\")\r\n      }\r\n    })\r\n    pieceTableExcl.addEventListener(\"click\", () => {\r\n      if (piece.isGeneric) return\r\n\r\n      if (UserEquipmentSettings.Instance.hasExclusion(piece)) {\r\n        removeExlusion(piece)\r\n        pieceTableExcl.classList.remove(\"excl-highlighted\")\r\n      }\r\n      else {\r\n        addExclusion(piece)\r\n        pieceTableExcl.classList.add(\"excl-highlighted\")\r\n      }\r\n    })\r\n\r\n    pieceTableEle.appendChild(pieceTableDef)\r\n    pieceTableEle.appendChild(pieceTableName)\r\n    pieceTableEle.appendChild(pieceTablePin)\r\n    pieceTableEle.appendChild(pieceTableExcl)\r\n    pieceTable.appendChild(pieceTableEle)\r\n  }\r\n\r\n  // return final div\r\n  const tr = htmlToElement('<tr class=\"result-set-details\"></tr>')\r\n  const td = htmlToElement('<td colspan=\"6\"\"></td>')\r\n  const d = htmlToElement('<div class=\"result-set-details-container\"></div>')\r\n  td.appendChild(d)\r\n  tr.appendChild(td)\r\n  d.appendChild(pieceTable)\r\n  d.appendChild(skillTable)\r\n  d.appendChild(document.createElement(\"div\")) // dummy for easy grid\r\n  d.appendChild(decoNameContainer)\r\n  return tr\r\n}\r\n\r\nconst getSetElement = (set: ArmorSet, skillData: StaticSkillData, searchParams: SearchConstraints) => {\r\n  // get bonus and negative skills\r\n  const requiredActivations = searchParams.skillActivations\r\n  const unrelatedActivations = set.evaluation!.activations.filter((act) => {\r\n    return !act.isPositive || // negative skill\r\n      !requiredActivations.find(req => req.requiredSkill === act.requiredSkill) || // skill is not in required\r\n      requiredActivations.find(req => req.requiredSkill === act.requiredSkill && act.requiredPoints > req.requiredPoints) // skill is upgrade of smth required\r\n  })\r\n  const unrelatedHtmlStrings = unrelatedActivations\r\n    .sort((a, b) => b.requiredPoints - a.requiredPoints)\r\n    .map((x) => {\r\n      return `<span class=\"result-set-unrelated-skill ${!x.isPositive ? 'neg-skill' : ''}\">${x.name}</span>`\r\n    })\r\n\r\n  // get basic display components\r\n  const tb = htmlToElement('<tbody class=\"result-set\"></tbody>')\r\n  const row1 = htmlToElement(`\r\n    <tr class=\"result-set-row result-set-row1\">\r\n      <td>${set.head.name}</td>\r\n      <td>${set.chest.name}</td>\r\n      <td>${set.arms.name}</td>\r\n      <td>${set.waist.name}</td>\r\n      <td>${set.legs.name}</td>\r\n      <td>${set.charm.name}</td>\r\n    </tr>`)\r\n  const row2 = htmlToElement(`\r\n    <tr class=\"result-set-row result-set-row2\">\r\n      <td colspan=\"6\">\r\n        <p><span class=\"def\">DEF</span> <span>${set.evaluation.defense.max}</span></p>\r\n        <p><span class=\"fir\">FIR</span> <span>${set.evaluation.resistance[0]}</span></p>\r\n        <p><span class=\"wat\">WAT</span> <span>${set.evaluation.resistance[1]}</span></p>\r\n        <p><span class=\"ice\">ICE</span> <span>${set.evaluation.resistance[2]}</span></p>\r\n        <p><span class=\"thn\">THN</span> <span>${set.evaluation.resistance[3]}</span></p>\r\n        <p><span class=\"drg\">DRG</span> <span>${set.evaluation.resistance[4]}</span></p>\r\n        <span class=\"result-set-unrelated\">${unrelatedHtmlStrings.join('')}</span>\r\n      </td>\r\n    </tr>`)\r\n\r\n  // append basic display components\r\n  const getter = () => { return getExpandedView(set, skillData, searchParams) }\r\n  for (const row of [row1, row2]) {\r\n    tb.appendChild(row)\r\n    row.addEventListener('click', () => onSetClick(tb, getter))\r\n  }\r\n\r\n  return tb\r\n}\r\n\r\nconst onMoreSkillsActClick = (d: HTMLDivElement) => {\r\n  const id = parseInt(d.getAttribute('data-id')!)\r\n\r\n  for (const ele of Array.from(document.getElementsByClassName('search-picker-activation'))) {\r\n    const thisId = parseInt(ele.getAttribute('data-id')!)\r\n    if (id === thisId) {\r\n      (ele as HTMLDivElement).click()\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nconst clearAndGetResultsContainer = () => {\r\n  const resultContainer = document.getElementById('search-results')!\r\n  for (const c of Array.from(resultContainer.children)) c.remove()\r\n  return resultContainer\r\n}\r\n\r\nexport const renderMoreSkills = (activations: SkillActivation[], pinsOrExclActive: boolean) => {\r\n  const resultContainer = clearAndGetResultsContainer()\r\n\r\n  if (activations.length === 0) {\r\n    resultContainer.appendChild(htmlToElement(`\r\n      <div class=\"results-banner banner\">\r\n        Can't fit more skills\r\n      <div>\r\n    `))\r\n\r\n    if (pinsOrExclActive) resultContainer.appendChild(PINS_OR_EXCL_ACTIVE_BANNER)\r\n\r\n    return\r\n  }\r\n\r\n  for (const act of activations) {\r\n    const d = htmlToElement(`<div class=\"results-more-skills-act\" data-id=\"${act.id}\"></div>`) as HTMLDivElement\r\n    d.appendChild(htmlToElement(`<span class=\"results-more-skills-act-content\">${act.name}</span>`))\r\n    d.addEventListener('click', () => { onMoreSkillsActClick(d) })\r\n    resultContainer.appendChild(d)\r\n  }\r\n}\r\n\r\nexport const renderResults = (sets: ArmorSet[], skillData: StaticSkillData, searchParams: SearchConstraints, pinsOrExclActive: boolean) => {\r\n  const resultContainer = clearAndGetResultsContainer()\r\n\r\n  // add search param element\r\n  resultContainer.appendChild(htmlToElement(`\r\n    <div class=\"results-title\">Results for ${searchParams.skillActivations.map(x => x.name).join(', ')} (${sets.length} matches)</div>\r\n  `))\r\n\r\n  // return if no results\r\n  if (sets.length === 0) {\r\n    resultContainer.appendChild(htmlToElement(`\r\n      <div class=\"results-banner banner\">\r\n        No matching armor sets\r\n      <div>\r\n    `))\r\n\r\n    if (pinsOrExclActive) resultContainer.appendChild(PINS_OR_EXCL_ACTIVE_BANNER)\r\n\r\n    return\r\n  }\r\n\r\n  // build table and table header\r\n  const table = htmlToElement('<table class=\"results-table\" id=\"results-table\"></table>')\r\n  const header = htmlToElement('<tr><th>Head</th><th>Torso</th><th>Arms</th><th>Waist</th><th>Legs</th><th>Charm</th></tr>')\r\n  resultContainer.appendChild(table)\r\n  table.appendChild(header)\r\n\r\n  // build and append html elements for each armor set\r\n  sets\r\n    .sort((a, b) => b.evaluation.defense.max - a.evaluation.defense.max)\r\n    .map(set => getSetElement(set, skillData, searchParams))\r\n    .forEach(ele => table.appendChild(ele))\r\n}\r\n","import UserCharmList from '../../data-provider/models/user/UserCharmList'\r\nimport ArmorSet from '../../searcher/models/ArmorSet'\r\nimport SearchConstraints from '../../searcher/models/SearchConstraints'\r\nimport StaticEquipmentData from '../../data-provider/models/equipment/StaticEquipmentData'\r\nimport StaticSkillData from '../../data-provider/models/skills/StaticSkillData'\r\nimport { search } from '../../searcher/searcher.module'\r\nimport { getGlobalSettings } from './global-settings.component'\r\nimport { getSkillActivations, resetSkillActivations } from './picker.component'\r\nimport { moreSkillsIterator, renderMoreSkills, renderResults } from './search-results.component'\r\nimport SkillActivation from '../../data-provider/models/skills/SkillActivation'\r\nimport UserEquipmentSettings from '../../data-provider/models/user/UserEquipmentSettings'\r\nimport EquipmentMin from '../../data-provider/models/equipment/EquipmentMin'\r\n\r\nconst pinsOrExclusionsActive = (pins: (EquipmentMin | undefined)[], exclusions: EquipmentMin[][]): boolean => {\r\n    return pins.some(p => p !== undefined) || exclusions.some(eL => eL.length > 0)\r\n}\r\n\r\nconst arrangeSearchData = () => {\r\n  // build params\r\n  const globalSettings = getGlobalSettings()\r\n  const skillActivations = getSkillActivations()\r\n\r\n  // return if no skill selected\r\n  if (skillActivations.length === 0) {\r\n    return\r\n  }\r\n\r\n  // sanitize activation input to only include highest version of each skill\r\n  const sanitizedSkillActivations = skillActivations\r\n    .filter((thisAct, i) => {\r\n      return skillActivations.every((compareAct, j) => {\r\n        if (i === j) return true\r\n        if (thisAct.requiredSkill !== compareAct.requiredSkill) return true\r\n\r\n        return thisAct.requiredPoints >= compareAct.requiredPoints\r\n      })\r\n    })\r\n\r\n  // create search params\r\n  const searchParams: SearchConstraints = {\r\n    weaponSlots: globalSettings.weaponSlots,\r\n    armorType: globalSettings.armorType,\r\n    armorRarity: globalSettings.armorRarity,\r\n    decoRarity: globalSettings.decoRarity,\r\n    limit: Math.min(Math.max(globalSettings.limit, 1), 1000),\r\n    skillActivations: sanitizedSkillActivations,\r\n    pins: UserEquipmentSettings.Instance.pins,\r\n    exclusions: UserEquipmentSettings.Instance.exclusions,\r\n  }\r\n\r\n  return searchParams\r\n}\r\n\r\nconst searchLogic = (equData: StaticEquipmentData, skillData: StaticSkillData) => {\r\n  const searchParams = arrangeSearchData()\r\n\r\n  if (!searchParams) {\r\n    alert('Please select at least one skill')\r\n    return\r\n  }\r\n\r\n  // search for sets\r\n  const result = search(\r\n    equData.armor,\r\n    equData.decorations,\r\n    UserCharmList.Instance.get(),\r\n    searchParams,\r\n    skillData,\r\n  )\r\n\r\n  // render results\r\n  renderResults(result, skillData, searchParams, pinsOrExclusionsActive(searchParams.pins, searchParams.exclusions))\r\n}\r\n\r\nconst moreSkillsLogic = async (equData: StaticEquipmentData, skillData: StaticSkillData) => {\r\n  const searchParams = arrangeSearchData()\r\n\r\n  if (!searchParams) {\r\n    alert('Please select at least one skill')\r\n    return\r\n  }\r\n\r\n  const charms = UserCharmList.Instance.get()\r\n\r\n  const aquirableSkills: SkillActivation[] = []\r\n\r\n  const outputIterator = moreSkillsIterator(skillData.skillActivation)\r\n\r\n  for (const actMap of skillData.skillActivation) {\r\n    const sActs = actMap[1]\r\n\r\n    const processedActs = sActs\r\n      .filter(act => act.requiredPoints >= 0)\r\n      .filter(act => !searchParams.skillActivations.map(x => x.id).includes(act.id))\r\n      .filter(act => !searchParams.skillActivations.find(x => act.requiredSkill === x.requiredSkill && act.requiredPoints < x.requiredPoints))\r\n      .sort((a, b) => a.requiredPoints - b.requiredPoints)\r\n\r\n    let breakFlag = false\r\n    for (const act of processedActs) {\r\n      outputIterator.next()\r\n      if (breakFlag) continue\r\n\r\n      const newParams: SearchConstraints = {\r\n        ...searchParams,\r\n        limit: 1,\r\n        skillActivations: searchParams.skillActivations.concat(act),\r\n      }\r\n\r\n      const r = await new Promise<ArmorSet[]>((resolve, _reject) => {\r\n        setTimeout(() => {\r\n          const innerR = search(\r\n            equData.armor,\r\n            equData.decorations,\r\n            charms,\r\n            newParams,\r\n            skillData,\r\n          )\r\n          resolve(innerR)\r\n        })\r\n      })\r\n\r\n      if (r.length === 0) breakFlag = true\r\n      else aquirableSkills.push(act)\r\n    }\r\n  }\r\n\r\n  renderMoreSkills(aquirableSkills, pinsOrExclusionsActive(searchParams.pins, searchParams.exclusions))\r\n}\r\n\r\nconst resetLogic = () => {\r\n  resetSkillActivations()\r\n}\r\n\r\n/** attach handlers for control buttons */\r\nexport const attachControlListeners = (equData: StaticEquipmentData, skillData: StaticSkillData) => {\r\n  const searchBtn = document.getElementById('search-btn') as HTMLButtonElement\r\n  const moreSkillsBtn = document.getElementById('more-btn') as HTMLButtonElement\r\n  const resetBtn = document.getElementById('reset-btn') as HTMLButtonElement\r\n\r\n  searchBtn.addEventListener('click', () => {\r\n    searchLogic(equData, skillData)\r\n  })\r\n  moreSkillsBtn.addEventListener('click', () => {\r\n    moreSkillsLogic(equData, skillData)\r\n  })\r\n  resetBtn.addEventListener('click', () => {\r\n    resetLogic()\r\n  })\r\n}\r\n","import { getArms, getChest, getDecorations, getHead, getLegs, getSkillActivationMap, getSkillCategories, getSkillNameMap, getWaist } from '../../data-provider/data-provider.module'\r\nimport StaticSkillData from '../../data-provider/models/skills/StaticSkillData'\r\nimport { renderCharmPicker } from '../ui/charms.component'\r\nimport { renderEqSettings } from '../ui/eq-settings.component'\r\nimport { initiateNavbar } from '../ui/navbar.component'\r\nimport { renderSkillPicker } from '../ui/picker.component'\r\nimport { attachControlListeners } from '../ui/search-controls.component'\r\n\r\nconst main = async () => {\r\n  // initiate static components\r\n  initiateNavbar()\r\n\r\n  // load remaining data\r\n  const armor = [\r\n    await getHead(),\r\n    await getChest(),\r\n    await getArms(),\r\n    await getWaist(),\r\n    await getLegs(),\r\n  ]\r\n  const decorations = await getDecorations()\r\n\r\n  // load skill data and render skill picker and charms with it\r\n  const skillData: StaticSkillData = {\r\n    skillName: await getSkillNameMap(),\r\n    skillActivation: await getSkillActivationMap(),\r\n    skillCategories: await getSkillCategories(),\r\n  }\r\n\r\n  // render ui\r\n  renderSkillPicker(skillData.skillActivation, skillData.skillCategories)\r\n  renderCharmPicker(skillData.skillName, skillData.skillActivation, skillData.skillCategories)\r\n  renderEqSettings(armor)\r\n\r\n  // initialize search controls\r\n  attachControlListeners({ armor, decorations }, skillData)\r\n}\r\n\r\nmain()\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}